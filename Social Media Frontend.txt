App.js:
import React, { useState } from 'react';
import './App.css';

function App() {
  const [users, setUsers] = useState({
    abc: {
      posts: [],
      followers: ['xyz'],
      following: ['xyz'],
    },
    xyz: {
      posts: ['content from XYZ'],
      followers: ['abc'],
      following: ['abc'],
    },
  });

  const [currentUser, setCurrentUser] = useState('abc'); // Currently logged-in user
  const [newPost, setNewPost] = useState('');
  const [editingPost, setEditingPost] = useState(null);
  const [editedPostContent, setEditedPostContent] = useState('');

  const createPost = () => {
    if (newPost) {
      setUsers({
        ...users,
        [currentUser]: {
          ...users[currentUser],
          posts: [...users[currentUser].posts, newPost],
        },
      });
      setNewPost('');
    }
  };

  const editPost = (index) => {
    setEditingPost(index);
    setEditedPostContent(users[currentUser].posts[index]);
  };

  const saveEditedPost = () => {
    const updatedPosts = [...users[currentUser].posts];
    updatedPosts[editingPost] = editedPostContent;

    setUsers({
      ...users,
      [currentUser]: {
        ...users[currentUser],
        posts: updatedPosts,
      },
    });

    setEditingPost(null);
    setEditedPostContent('');
  };

  const deletePost = (index) => {
    const updatedPosts = users[currentUser].posts.filter((_, i) => i !== index);
    setUsers({
      ...users,
      [currentUser]: {
        ...users[currentUser],
        posts: updatedPosts,
      },
    });
  };

  const followUser = (userToFollow) => {
    if (!users[currentUser].following.includes(userToFollow)) {
      setUsers({
        ...users,
        [currentUser]: {
          ...users[currentUser],
          following: [...users[currentUser].following, userToFollow],
        },
      });
    }
  };

  return (
    <div id="app">
      <div className="sidebar">
        <h2>Social Media</h2>
        
        <div className="follow-section">
          <h3>Followers</h3>
          {users[currentUser].followers.map((follower) => (
            <div key={follower}>{follower}</div>
          ))}
        </div>

        <div className="follow-section">
          <h3>Following</h3>
          {users[currentUser].following.map((followed) => (
            <div key={followed}>{followed}</div>
          ))}
        </div>

        <div id="friends-list">
          <h3>Post Options</h3>
          <textarea
            value={newPost}
            onChange={(e) => setNewPost(e.target.value)}
            placeholder="Create new post..."
          />
          <button onClick={createPost}>Create Post</button>
        </div>
      </div>

      <div className="main-section">
        <div className="feed">
          <h2>News Feed</h2>
          
          {/* Display posts from followed users */}
          {users[currentUser].following.map((user) => (
            <div key={user} className="post">
              <p>{users[user].posts.join(' | ')}</p>
            </div>
          ))}

          {/* Suggest people to follow */}
          <h3>People You Can Follow</h3>
          {Object.keys(users).map((user) => {
            if (user !== currentUser && !users[currentUser].following.includes(user)) {
              return (
                <div key={user}>
                  <p>{user}</p>
                  <button onClick={() => followUser(user)}>Follow</button>
                </div>
              );
            }
            return null;
          })}
        </div>

        <div className="post-creation">
          <h3>Your Posts</h3>
          {users[currentUser].posts.map((post, index) => (
            <div key={index} className="post">
              <p>{post}</p>
              <div className="post-actions">
                <button onClick={() => editPost(index)}>Edit</button>
                <button onClick={() => deletePost(index)}>Delete</button>
              </div>
            </div>
          ))}
        </div>

        {editingPost !== null && (
          <div className="post-creation">
            <textarea
              value={editedPostContent}
              onChange={(e) => setEditedPostContent(e.target.value)}
            />
            <button onClick={saveEditedPost}>Save</button>
          </div>
        )}
      </div>
    </div>
  );
}

export default App;

App.css:
/* Set the body and main container to take up full width and height */
body, html {
  margin: 0;
  padding: 0;
  height: 100%;
  width: 100%;
  font-family: Arial, sans-serif;
}

#app {
  display: flex;
  height: 100vh; /* Full viewport height */
  width: 100vw; /* Full viewport width */
}

.sidebar {
  width: 250px; /* Sidebar width */
  background-color: #333;
  color: white;
  padding: 20px;
  box-sizing: border-box;
  overflow-y: auto;
}

.sidebar h2, .sidebar h3 {
  color: #fff;
  font-size: 18px;
  margin-bottom: 10px;
}

.sidebar .follow-section {
  margin-bottom: 20px;
}

.sidebar textarea {
  width: 100%;
  padding: 10px;
  margin-top: 10px;
  border-radius: 5px;
  border: 1px solid #ccc;
  resize: none;
}

.sidebar button {
  background-color: #4CAF50;
  color: white;
  border: none;
  padding: 10px;
  margin-top: 10px;
  width: 100%;
  border-radius: 5px;
  cursor: pointer;
}

.sidebar button:hover {
  background-color: #45a049;
}

.main-section {
  flex-grow: 1; /* This will make the main section take up the remaining space */
  background-color: #f4f4f4;
  padding: 20px;
  box-sizing: border-box;
  overflow-y: auto;
}

.feed {
  margin-bottom: 20px;
}

.feed h2 {
  font-size: 24px;
  margin-bottom: 10px;
}

.feed .post {
  background-color: #fff;
  padding: 10px;
  margin-bottom: 10px;
  border-radius: 5px;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
}

.post-creation {
  margin-top: 20px;
}

.post-creation textarea {
  width: 100%;
  padding: 10px;
  margin-bottom: 10px;
  border-radius: 5px;
  border: 1px solid #ccc;
  resize: none;
}

.post-actions button {
  padding: 5px 10px;
  background-color: #007bff;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  margin: 5px;
}

.post-actions button:hover {
  background-color: #0056b3;
}

.follow-section p {
  font-size: 16px;
  color: #ccc;
  margin: 5px 0;
}

.follow-section button {
  background-color: #28a745;
  color: white;
  border: none;
  padding: 5px 10px;
  margin-top: 5px;
  border-radius: 5px;
  cursor: pointer;
  width: 100%;
}

.follow-section button:hover {
  background-color: #218838;
}

#friends-list {
  margin-top: 20px;
}

#friends-list h3 {
  margin-bottom: 10px;
}

#friends-list div {
  margin-bottom: 10px;
}
